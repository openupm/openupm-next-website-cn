import{_ as e,o as t,c as i}from"./app-D_mlLpjO.js";const a={};function r(o,c){return t(),i("div")}const u=e(a,[["render",r],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/packages/com.dubitlimited.duck.hierarchy-behaviour/","title":"📦 Duck层级行文 - com.dubitlimited.duck.hierarchy-behaviour","lang":"zh-CN","frontmatter":{"layout":"PackageDetailLayout","sidebar":[{"text":"","children":[]}],"title":"📦 Duck层级行文 - com.dubitlimited.duck.hierarchy-behaviour","description":"一种快速的方式来创建一个MonoBehaviour作为一个子对象，包含一个有类型安全的参数或无参数的初始化方法。","cover":null,"author":"dubit","tags":["utilities"],"metadataLocal":{"name":"com.dubitlimited.duck.hierarchy-behaviour","repoUrl":"https://github.com/dubit/unity-hierarchy-behaviour","displayName":"Duck Hierarchy Behaviour","description":"A quick way to create a MonoBehaviour as a child object that includes an Initialize method with or without arguments that are type-safe.","licenseSpdxId":"MIT","licenseName":"MIT License","topics":["utilities"],"hunter":"JesseTG","createdAt":1594683435828,"image":null,"parentRepoUrl":null,"readme":"development:README.md","gitTagPrefix":"","gitTagIgnore":"","minVersion":"","displayName_zhCN":"Duck层级行文","description_zhCN":"一种快速的方式来创建一个MonoBehaviour作为一个子对象，包含一个有类型安全的参数或无参数的初始化方法。","imageFit":"cover","repo":"unity-hierarchy-behaviour","owner":"dubit","ownerUrl":"https://github.com/dubit","parentRepo":null,"parentOwner":null,"parentOwnerUrl":null,"readmeBranch":"development","hunterUrl":"https://github.com/JesseTG"},"topics":[{"name":"Utilities","slug":"utilities","keywords":["utilities","tool"],"urlPath":"/packages/topics/utilities/"}],"head":[["link",{"rel":"canonical","href":"https://openupm.cn/packages/com.dubitlimited.duck.hierarchy-behaviour/"}],["meta",{"property":"og:url","content":"https://openupm.cn/packages/com.dubitlimited.duck.hierarchy-behaviour/"}],["meta",{"property":"og:site_name","content":"OpenUPM中文网"}],["meta",{"property":"og:title","content":"📦 Duck层级行文 - com.dubitlimited.duck.hierarchy-behaviour"}],["meta",{"property":"og:description","content":"一种快速的方式来创建一个MonoBehaviour作为一个子对象，包含一个有类型安全的参数或无参数的初始化方法。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://openupm.cn/images/openupm-twitter.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"📦 Duck层级行文 - com.dubitlimited.duck.hierarchy-behaviour"}],["meta",{"property":"article:author","content":"dubit"}],["meta",{"property":"article:tag","content":"utilities"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"📦 Duck层级行文 - com.dubitlimited.duck.hierarchy-behaviour\\",\\"description\\":\\"一种快速的方式来创建一个MonoBehaviour作为一个子对象，包含一个有类型安全的参数或无参数的初始化方法。\\"}"]]},"headers":[],"filePathRelative":null}');export{u as comp,h as data};
