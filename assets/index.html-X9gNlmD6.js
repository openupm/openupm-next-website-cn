import{_ as e,o as a,c as t}from"./app-D_mlLpjO.js";const i={};function r(n,o){return a(),t("div")}const p=e(i,[["render",r],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/packages/jp.keijiro.mediapipe.facelandmark/","title":"ðŸ“¦ MediaPipe Face Landmark Detector - jp.keijiro.mediapipe.facelandmark","lang":"zh-CN","frontmatter":{"layout":"PackageDetailLayout","sidebar":[{"text":"","children":[]}],"title":"ðŸ“¦ MediaPipe Face Landmark Detector - jp.keijiro.mediapipe.facelandmark","description":"MediaPipe face landmark detection neural network model for Unity Barracuda","cover":"https://camo.githubusercontent.com/3280384467f3e12ba93e7653a545171095a036c35c27d1bc5415501d57d86af0/68747470733a2f2f692e696d6775722e636f6d2f714e5264695a706c2e6a7067","author":"keijiro","tags":["ai","animation","camera","utilities","video"],"metadataLocal":{"name":"jp.keijiro.mediapipe.facelandmark","repoUrl":"https://github.com/keijiro/FaceLandmarkBarracuda","displayName":"MediaPipe Face Landmark Detector","description":"MediaPipe face landmark detection neural network model for Unity Barracuda","licenseSpdxId":"Apache-2.0","licenseName":"Apache License 2.0","topics":["ai","animation","camera","utilities","video"],"hunter":"ltmx","createdAt":1708697970613,"image":"https://camo.githubusercontent.com/3280384467f3e12ba93e7653a545171095a036c35c27d1bc5415501d57d86af0/68747470733a2f2f692e696d6775722e636f6d2f714e5264695a706c2e6a7067","parentRepoUrl":null,"readme":"main:README.md","gitTagPrefix":"","gitTagIgnore":"","minVersion":"","imageFit":"cover","repo":"FaceLandmarkBarracuda","owner":"keijiro","ownerUrl":"https://github.com/keijiro","parentRepo":null,"parentOwner":null,"parentOwnerUrl":null,"readmeBranch":"main","hunterUrl":"https://github.com/ltmx"},"topics":[{"name":"AI","slug":"ai","keywords":["ai","pathfinding","gpt","openai","behavior tree","state machine","machine learning","generative ai"],"urlPath":"/packages/topics/ai/"},{"name":"Animation","slug":"animation","keywords":["animation","rigging","animator"],"urlPath":"/packages/topics/animation/"},{"name":"Camera","slug":"camera","keywords":["camera","post-processing"],"urlPath":"/packages/topics/camera/"},{"name":"Utilities","slug":"utilities","keywords":["utilities","tool"],"urlPath":"/packages/topics/utilities/"},{"name":"Video","slug":"video","keywords":["video","movie"],"urlPath":"/packages/topics/video/"}],"head":[["link",{"rel":"canonical","href":"https://openupm.cn/packages/jp.keijiro.mediapipe.facelandmark/"}],["meta",{"property":"og:url","content":"https://openupm.cn/packages/jp.keijiro.mediapipe.facelandmark/"}],["meta",{"property":"og:site_name","content":"OpenUPMä¸­æ–‡ç½‘"}],["meta",{"property":"og:title","content":"ðŸ“¦ MediaPipe Face Landmark Detector - jp.keijiro.mediapipe.facelandmark"}],["meta",{"property":"og:description","content":"MediaPipe face landmark detection neural network model for Unity Barracuda"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://camo.githubusercontent.com/3280384467f3e12ba93e7653a545171095a036c35c27d1bc5415501d57d86af0/68747470733a2f2f692e696d6775722e636f6d2f714e5264695a706c2e6a7067"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"ðŸ“¦ MediaPipe Face Landmark Detector - jp.keijiro.mediapipe.facelandmark"}],["meta",{"property":"article:author","content":"keijiro"}],["meta",{"property":"article:tag","content":"ai"}],["meta",{"property":"article:tag","content":"animation"}],["meta",{"property":"article:tag","content":"camera"}],["meta",{"property":"article:tag","content":"utilities"}],["meta",{"property":"article:tag","content":"video"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"ðŸ“¦ MediaPipe Face Landmark Detector - jp.keijiro.mediapipe.facelandmark\\",\\"description\\":\\"MediaPipe face landmark detection neural network model for Unity Barracuda\\"}"]]},"headers":[],"filePathRelative":null}');export{p as comp,m as data};
