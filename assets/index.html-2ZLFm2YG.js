import{_ as e,o as t,c as n}from"./app-D_mlLpjO.js";const a={};function i(o,r){return t(),n("div")}const l=e(a,[["render",i],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/packages/net.battlehub.uielementbindings/","title":"ðŸ“¦ UI Element Bindings - net.battlehub.uielementbindings","lang":"zh-CN","frontmatter":{"layout":"PackageDetailLayout","sidebar":[{"text":"","children":[]}],"title":"ðŸ“¦ UI Element Bindings - net.battlehub.uielementbindings","description":"Package for Unity that enables two-way data binding between Unity UIElements and game/business logic code. This reduces boiler-plate code that would otherwise be necessary for things like updating the UI when a property changes, removes the need for messy links between objects in the scene that can be broken easily, and allows easier unit testing of code by providing a layer of abstraction between the UI and your core logic code.","cover":"","author":"Battlehub0x","tags":["frameworks","gui"],"metadataLocal":{"name":"net.battlehub.uielementbindings","repoUrl":"https://github.com/Battlehub0x/UIElementBindings","displayName":"UI Element Bindings","description":"Package for Unity that enables two-way data binding between Unity UIElements and game/business logic code. This reduces boiler-plate code that would otherwise be necessary for things like updating the UI when a property changes, removes the need for messy links between objects in the scene that can be broken easily, and allows easier unit testing of code by providing a layer of abstraction between the UI and your core logic code.","licenseSpdxId":"MIT","licenseName":"MIT License","topics":["frameworks","gui"],"hunter":"Battlehub0x","createdAt":1653494262541,"image":"","parentRepoUrl":null,"readme":"main:README.md","gitTagPrefix":"","gitTagIgnore":"","minVersion":"","displayName_zhCN":"","description_zhCN":"","readme_zhCN":"","imageFit":"cover","repo":"UIElementBindings","owner":"Battlehub0x","ownerUrl":"https://github.com/Battlehub0x","parentRepo":null,"parentOwner":null,"parentOwnerUrl":null,"readmeBranch":"main","hunterUrl":"https://github.com/Battlehub0x"},"topics":[{"name":"Frameworks","slug":"frameworks","keywords":["framework"],"urlPath":"/packages/topics/frameworks/"},{"name":"GUI","slug":"gui","keywords":["gui","ui","webui","html5"],"urlPath":"/packages/topics/gui/"}],"head":[["link",{"rel":"canonical","href":"https://openupm.cn/packages/net.battlehub.uielementbindings/"}],["meta",{"property":"og:url","content":"https://openupm.cn/packages/net.battlehub.uielementbindings/"}],["meta",{"property":"og:site_name","content":"OpenUPMä¸­æ–‡ç½‘"}],["meta",{"property":"og:title","content":"ðŸ“¦ UI Element Bindings - net.battlehub.uielementbindings"}],["meta",{"property":"og:description","content":"Package for Unity that enables two-way data binding between Unity UIElements and game/business logic code. This reduces boiler-plate code that would otherwise be necessary for things like updating the UI when a property changes, removes the need for messy links between objects in the scene that can be broken easily, and allows easier unit testing of code by providing a layer of abstraction between the UI and your core logic code."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://openupm.cn/images/openupm-twitter.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"ðŸ“¦ UI Element Bindings - net.battlehub.uielementbindings"}],["meta",{"property":"article:author","content":"Battlehub0x"}],["meta",{"property":"article:tag","content":"frameworks"}],["meta",{"property":"article:tag","content":"gui"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"ðŸ“¦ UI Element Bindings - net.battlehub.uielementbindings\\",\\"description\\":\\"Package for Unity that enables two-way data binding between Unity UIElements and game/business logic code. This reduces boiler-plate code that would otherwise be necessary for things like updating the UI when a property changes, removes the need for messy links between objects in the scene that can be broken easily, and allows easier unit testing of code by providing a layer of abstraction between the UI and your core logic code.\\"}"]]},"headers":[],"filePathRelative":null}');export{l as comp,c as data};
