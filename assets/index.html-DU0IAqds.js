import{_ as e,o as r,c as t}from"./app-D_mlLpjO.js";const a={};function o(n,s){return r(),t("div")}const i=e(a,[["render",o],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/packages/nl.elraccoone.promises/","title":"📦 Promises - nl.elraccoone.promises","lang":"zh-CN","frontmatter":{"layout":"PackageDetailLayout","sidebar":[{"text":"","children":[]}],"title":"📦 Promises - nl.elraccoone.promises","description":"与传统的基于回调的方法相比，Promise为执行，编写和管理异步操作提供了一种更简单的选择。它们还允许您使用类似于同步try/catch的方法来处理异步错误。","cover":"https://raw.githubusercontent.com/jeffreylanters/unity-promises/master/.github/WIKI/repository-open-graph.png","author":"jeffreylanters","tags":["parallelism-and-concurrency"],"metadataLocal":{"name":"nl.elraccoone.promises","repoUrl":"https://github.com/jeffreylanters/unity-promises","displayName":"Promises","description":"Promises provide a simpler alternative for executing, composing, and managing asynchronous operations when compared to traditional callback-based approaches. They also allow you to handle asynchronous errors using approaches that are similar to synchronous try/catch.","licenseSpdxId":"MIT","licenseName":"MIT License","topics":["parallelism-and-concurrency"],"hunter":"JesseTG","createdAt":1600620235717,"image":"https://raw.githubusercontent.com/jeffreylanters/unity-promises/master/.github/WIKI/repository-open-graph.png","parentRepoUrl":null,"readme":"master:README.md","gitTagPrefix":"","gitTagIgnore":"","minVersion":"","displayName_zhCN":"Promises","description_zhCN":"与传统的基于回调的方法相比，Promise为执行，编写和管理异步操作提供了一种更简单的选择。它们还允许您使用类似于同步try/catch的方法来处理异步错误。","imageFit":"cover","repo":"unity-promises","owner":"jeffreylanters","ownerUrl":"https://github.com/jeffreylanters","parentRepo":null,"parentOwner":null,"parentOwnerUrl":null,"readmeBranch":"master","hunterUrl":"https://github.com/JesseTG"},"topics":[{"name":"Parallelism & Concurrency","slug":"parallelism-and-concurrency","keywords":["parallelism","concurrency","multithreading"],"urlPath":"/packages/topics/parallelism-and-concurrency/"}],"head":[["link",{"rel":"canonical","href":"https://openupm.cn/packages/nl.elraccoone.promises/"}],["meta",{"property":"og:url","content":"https://openupm.cn/packages/nl.elraccoone.promises/"}],["meta",{"property":"og:site_name","content":"OpenUPM中文网"}],["meta",{"property":"og:title","content":"📦 Promises - nl.elraccoone.promises"}],["meta",{"property":"og:description","content":"与传统的基于回调的方法相比，Promise为执行，编写和管理异步操作提供了一种更简单的选择。它们还允许您使用类似于同步try/catch的方法来处理异步错误。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/jeffreylanters/unity-promises/master/.github/WIKI/repository-open-graph.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"📦 Promises - nl.elraccoone.promises"}],["meta",{"property":"article:author","content":"jeffreylanters"}],["meta",{"property":"article:tag","content":"parallelism-and-concurrency"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"📦 Promises - nl.elraccoone.promises\\",\\"description\\":\\"与传统的基于回调的方法相比，Promise为执行，编写和管理异步操作提供了一种更简单的选择。它们还允许您使用类似于同步try/catch的方法来处理异步错误。\\"}"]]},"headers":[],"filePathRelative":null}');export{i as comp,p as data};
