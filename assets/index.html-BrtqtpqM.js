import{_ as e,o as t,c as a}from"./app-D_mlLpjO.js";const s={};function i(r,n){return t(),a("div")}const c=e(s,[["render",i],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/packages/com.cathei.betterstreamingassets/","title":"ðŸ“¦ Better Streaming Assets - com.cathei.betterstreamingassets","lang":"zh-CN","frontmatter":{"layout":"PackageDetailLayout","sidebar":[{"text":"","children":[]}],"title":"ðŸ“¦ Better Streaming Assets - com.cathei.betterstreamingassets","description":"Better Streaming Assets is a plugin that lets you access Streaming Assets directly in an uniform and thread-safe way, with tiny overhead. Mostly beneficial for Android projects, where the alternatives are to use archaic and hugely inefficient WWW or embed data in Asset Bundles. API is based on Syste.IO.File and System.IO.Directory classes.","cover":"","author":"cathei","tags":["asset-management","utilities"],"metadataLocal":{"name":"com.cathei.betterstreamingassets","repoUrl":"https://github.com/cathei/BetterStreamingAssets-Package","displayName":"Better Streaming Assets","description":"Better Streaming Assets is a plugin that lets you access Streaming Assets directly in an uniform and thread-safe way, with tiny overhead. Mostly beneficial for Android projects, where the alternatives are to use archaic and hugely inefficient WWW or embed data in Asset Bundles. API is based on Syste.IO.File and System.IO.Directory classes.","licenseSpdxId":"MIT","licenseName":"MIT License","topics":["asset-management","utilities"],"hunter":"cathei","createdAt":1661832732911,"image":"","parentRepoUrl":"https://github.com/gwiazdorrr/BetterStreamingAssets","readme":"master:README.md","gitTagPrefix":"","gitTagIgnore":"","minVersion":"","displayName_zhCN":"","description_zhCN":"","readme_zhCN":"","imageFit":"cover","repo":"BetterStreamingAssets-Package","owner":"cathei","ownerUrl":"https://github.com/cathei","parentRepo":"BetterStreamingAssets","parentOwner":"gwiazdorrr","parentOwnerUrl":"https://github.com/gwiazdorrr","readmeBranch":"master","hunterUrl":"https://github.com/cathei"},"topics":[{"name":"Asset Management","slug":"asset-management","keywords":["asset","assetbundle","addressables"],"urlPath":"/packages/topics/asset-management/"},{"name":"Utilities","slug":"utilities","keywords":["utilities","tool"],"urlPath":"/packages/topics/utilities/"}],"head":[["link",{"rel":"canonical","href":"https://openupm.cn/packages/com.cathei.betterstreamingassets/"}],["meta",{"property":"og:url","content":"https://openupm.cn/packages/com.cathei.betterstreamingassets/"}],["meta",{"property":"og:site_name","content":"OpenUPMä¸­æ–‡ç½‘"}],["meta",{"property":"og:title","content":"ðŸ“¦ Better Streaming Assets - com.cathei.betterstreamingassets"}],["meta",{"property":"og:description","content":"Better Streaming Assets is a plugin that lets you access Streaming Assets directly in an uniform and thread-safe way, with tiny overhead. Mostly beneficial for Android projects, where the alternatives are to use archaic and hugely inefficient WWW or embed data in Asset Bundles. API is based on Syste.IO.File and System.IO.Directory classes."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://openupm.cn/images/openupm-twitter.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"ðŸ“¦ Better Streaming Assets - com.cathei.betterstreamingassets"}],["meta",{"property":"article:author","content":"cathei"}],["meta",{"property":"article:tag","content":"asset-management"}],["meta",{"property":"article:tag","content":"utilities"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"ðŸ“¦ Better Streaming Assets - com.cathei.betterstreamingassets\\",\\"description\\":\\"Better Streaming Assets is a plugin that lets you access Streaming Assets directly in an uniform and thread-safe way, with tiny overhead. Mostly beneficial for Android projects, where the alternatives are to use archaic and hugely inefficient WWW or embed data in Asset Bundles. API is based on Syste.IO.File and System.IO.Directory classes.\\"}"]]},"headers":[],"filePathRelative":null}');export{c as comp,m as data};
