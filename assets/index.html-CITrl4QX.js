import{_ as o,r,o as p,c as i,b as e,e as t,d as a,a as s}from"./app-D_mlLpjO.js";const u={},l=e("h1",{id:"nuget-软件包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nuget-软件包"},[e("span",null,"NuGet 软件包")])],-1),c=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"实验性"),e("p",null,"UnityNuGet uplink是一个实验性功能。")],-1),g={href:"https://docs.microsoft.com/en-us/nuget/what-is-nuget",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/xoofx/UnityNuGet",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/xoofx/UnityNuGet/blob/master/registry.json",target:"_blank",rel:"noopener noreferrer"},y={href:"https://unitynuget-registry.azurewebsites.net",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"org.nuget",-1),k={href:"https://verdaccio.org/docs/en/uplinks",target:"_blank",rel:"noopener noreferrer"},N=s('<ul><li>OpenUPM软件包仓库每小时与UnityNuGet软件包仓库同步。</li><li>缓存的tarballs也托管在CDN上。</li><li>您可以通过openupm-cli <code>openupm view org.nuget.some-package</code>查看包详细信息。</li></ul><p>该集成带有一些限制：</p><ul><li>NuGet包在OpenUPM网站上不可被搜索或浏览。</li><li>NuGet包在OpenUPM软件包仓库的API搜索接口中不可被搜索。</li><li>NuGet包将在Unity包管理器的“My Registries”部分中不可见，但仍可在“In Project”部分中可见。</li><li>Unity控制台可能会警告“搜索包时出错”。</li><li>以上问题将来会逐步解决。</li></ul><h2 id="使用uplinked-unitynuget" tabindex="-1"><a class="header-anchor" href="#使用uplinked-unitynuget"><span>使用Uplinked UnityNuGet</span></a></h2>',4),_={href:"https://github.com/favoyang/com.example.nuget-consumer",target:"_blank",rel:"noopener noreferrer"},G=s(`<ul><li>安装依赖于UnityNuGet的OpenUPM包。</li><li>通过禁用“Assembly Version Validation”来解决潜在的版本验证问题。</li></ul><h2 id="直接使用unitynuget" tabindex="-1"><a class="header-anchor" href="#直接使用unitynuget"><span>直接使用UnityNuGet</span></a></h2><p>通过设置UnityNuGet软件包仓库并锁定<code>org.nuget</code>作用域可以代替OpenUPM的Uplink功能。</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scopedRegistries&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Unity NuGet&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://unitynuget-registry.azurewebsites.net&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;org.nuget&quot;</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">,</span> ...
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="列出所有unitynuget包" tabindex="-1"><a class="header-anchor" href="#列出所有unitynuget包"><span>列出所有UnityNuGet包</span></a></h2>`,5),U={href:"https://github.com/xoofx/UnityNuGet/blob/master/registry.json",target:"_blank",rel:"noopener noreferrer"},f={href:"https://unitynuget-registry.azurewebsites.net/-/all",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"/-/all",-1),x=s(`<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-s</span> https://unitynuget-registry.azurewebsites.net/-/all <span class="token operator">|</span> json <span class="token parameter variable">-k</span>
</code></pre></div>`,1);function L(P,M){const n=r("ExternalLinkIcon");return p(),i("div",null,[l,c,e("p",null,[e("a",g,[t("NuGet"),a(n)]),t(" 是 .NET 的包管理器，旨在使开发人员共享基础性的可重用代码。许多UPM包内嵌了NuGet的DLL。当两个UPM包含有相同的DLL或同一NuGet DLL的不同版本时，会出现版本冲突问题，不得不手动改名。更好的解决方案是创建一个含有NuGet DLL的UPM包，使之成为其他UPM包的依赖关系。")]),e("p",null,[t("感谢xoofx的"),e("a",h,[t("UnityNuGet"),a(n)]),t("项目，提供了将NuGet包打包为UPM包的服务。类似于OpenUPM，UnityNuGet含有一个"),e("a",d,[t("社区维护的NuGet包列表"),a(n)]),t("。并通过"),e("a",y,[t("unitynuget-registry.azurewebsites.net"),a(n)]),t("的软件包仓库托管，并使用统一的"),m,t("作用域。")]),e("p",null,[t("OpenUPM软件包仓库"),e("a",k,[t("uplinks"),a(n)]),t("到UnityNuGet软件包仓库，以便更轻松地使用NuGet包。")]),N,e("p",null,[t("请参阅包含以下内容的演示项目："),e("a",_,[t("https://github.com/favoyang/com.example.nuget-consumer"),a(n)])]),G,e("p",null,[t("查看"),e("a",U,[t("GitHub 列表"),a(n)]),t("， 或使用"),e("a",f,[b,t(" API接口"),a(n)]),t("：")]),x])}const q=o(u,[["render",L],["__file","index.html.vue"]]),D=JSON.parse('{"path":"/zh/nuget/","title":"NuGet 软件包","lang":"zh-CN","frontmatter":{"pageClass":"page-nuget","description":"NuGet 软件包 实验性 UnityNuGet uplink是一个实验性功能。 NuGet 是 .NET 的包管理器，旨在使开发人员共享基础性的可重用代码。许多UPM包内嵌了NuGet的DLL。当两个UPM包含有相同的DLL或同一NuGet DLL的不同版本时，会出现版本冲突问题，不得不手动改名。更好的解决方案是创建一个含有NuGet DLL的UPM...","head":[["link",{"rel":"canonical","href":"https://openupm.cn/zh/nuget/"}],["meta",{"property":"og:url","content":"https://openupm.cn/zh/nuget/"}],["meta",{"property":"og:site_name","content":"OpenUPM中文网"}],["meta",{"property":"og:title","content":"NuGet 软件包"}],["meta",{"property":"og:description","content":"NuGet 软件包 实验性 UnityNuGet uplink是一个实验性功能。 NuGet 是 .NET 的包管理器，旨在使开发人员共享基础性的可重用代码。许多UPM包内嵌了NuGet的DLL。当两个UPM包含有相同的DLL或同一NuGet DLL的不同版本时，会出现版本冲突问题，不得不手动改名。更好的解决方案是创建一个含有NuGet DLL的UPM..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://openupm.cn/images/openupm-twitter.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"NuGet 软件包"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NuGet 软件包\\",\\"image\\":[\\"https://openupm.cn/images/openupm-twitter.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"使用Uplinked UnityNuGet","slug":"使用uplinked-unitynuget","link":"#使用uplinked-unitynuget","children":[]},{"level":2,"title":"直接使用UnityNuGet","slug":"直接使用unitynuget","link":"#直接使用unitynuget","children":[]},{"level":2,"title":"列出所有UnityNuGet包","slug":"列出所有unitynuget包","link":"#列出所有unitynuget包","children":[]}],"filePathRelative":"zh/nuget/index.md","autoDesc":true}');export{q as comp,D as data};
